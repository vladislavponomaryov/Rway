{"version":3,"file":"static/js/638.1700fd1d.chunk.js","mappings":"+KACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,aAAe,8BAA8B,KAAO,sBAAsB,SAAW,2BCArL,EAAuB,sBAAvB,EAAkD,oBAAlD,EAAkF,2BAAlF,EAAsH,wB,SCatH,EAZgB,SAACA,GAEb,IAAIC,EAAuB,OAAfD,EAAMC,KAAiBC,EAAOA,EAE1C,OACI,iBAAKC,UAAS,UAAKD,EAAL,YAAeD,GAA7B,WACI,gBAAKE,UAAWD,KAChB,0BAAOF,EAAMI,YAGxB,ECXD,GAAgB,KAAO,yBAAyB,OAAS,4B,oBCczD,EAXmB,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACI,iBAAKH,UAAWD,EAAAA,KAAhB,WACI,gBAAKC,UAAWD,EAAAA,UAChB,SAAC,KAAD,CAASK,GAAIF,EAAMF,UAAW,qBAAEK,SAA0BN,EAAAA,aAAiBA,EAAAA,IAA7C,EAA9B,SAAqFF,EAAMS,SAGtG,E,wCCJKC,GAAYC,EAAAA,EAAAA,GAAiB,IAe7BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAK,wBAAhBD,EAbL,SAACb,GACpB,OACI,kBAAMe,SAAUf,EAAMgB,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,YAAa,cAAeT,KAAM,iBAAkBU,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAASZ,QAExG,0BACI,wCAIf,IA8BD,EA1BgB,SAACa,GAEb,IAAIC,EAAkBD,EAAEE,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYrB,GAAIqB,EAAErB,GAAeG,KAAMkB,EAAElB,MAAdkB,EAAErB,GAAjC,IACjCsB,EAAmBL,EAAEM,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,QAASH,KAAM6B,EAAE7B,MAAW6B,EAAExB,GAAtD,IAMvC,OACI,iBAAKH,UAAWD,EAAAA,QAAhB,WACI,gBAAKC,UAAWD,EAAAA,aAAhB,SACKsB,KAEL,iBAAKrB,UAAWD,EAAAA,SAAhB,UACK0B,GACD,gBAAKzB,UAAWD,EAAAA,kBAAhB,UAEI,SAACU,EAAD,CAAqBG,SAbf,SAACgB,GACnBR,EAAES,WAAWD,EAASE,eACzB,WAiBJ,E,sEC9CGC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,OADU,ECkBjC,GAAeE,E,QAAAA,UACXC,EAAAA,EAAAA,UAjBkB,SAACJ,GACnB,MAAO,CACHK,YAAaL,EAAMM,YAAYD,YAC/Bf,QAASU,EAAMM,YAAYhB,QAC3BI,SAAUM,EAAMM,YAAYZ,SAEnC,IAEwB,SAACa,GACtB,MAAO,CACHV,WAAY,SAACC,GACTS,GAASC,EAAAA,EAAAA,GAAwBV,GACpC,EAER,KDZ+B,SAACW,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAKC,KAAK9C,MAAMoC,QAET,SAACQ,GAAD,UAAeE,KAAK9C,SAFI,SAAC,KAAD,CAAUO,GAAG,UAG/C,KAPsC,GAEXwC,EAAAA,WAQhC,OAAOR,EAAAA,EAAAA,SAAQL,EAARK,CAAoCM,EAC9C,GCGD,CAGEG,E","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-kabzda-1/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://react-kabzda-1/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ZM187\",\"dialogsItems\":\"Dialogs_dialogsItems__7kXzB\",\"dialogActive\":\"Dialogs_dialogActive__b3P-0\",\"link\":\"Dialogs_link__cODus\",\"messages\":\"Dialogs_messages__A8h7z\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Message_item__CTpD9\",\"me\":\"Message_me__n4TkH\",\"companion\":\"Message_companion__6WMxv\",\"avatar\":\"Message_avatar__3U3ni\"};","import s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    let user = (props.user === 'me') ? s.me : s.companion;\r\n\r\n    return (\r\n        <div className={`${s.item} ${user}`}>\r\n            <div className={s.avatar}></div>\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogItem_item__CvbS2\",\"avatar\":\"DialogItem_avatar__rtMzn\"};","import s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.avatar}></div>\r\n            <NavLink to={path} className={({isActive}) => (isActive ? s.dialogActive : s.link)}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport React from \"react\";\r\nimport Field from \"redux-form/lib/Field\";\r\nimport ReduxForm from \"redux-form/lib/reduxForm\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'New message'} name={'newMessageBody'} component={Textarea} validate={[required,maxLength]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = ReduxForm({form:'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nconst Dialogs = (p) => {\r\n\r\n    let dialogsElements = p.dialogs.map(d => <DialogItem id={d.id} key={d.id} name={d.name}/>);\r\n    let messagesElements = p.messages.map(m => <Message message={m.message} user={m.user} key={m.id} />)\r\n\r\n    const addNewMessage = (formData) => {\r\n        p.addMessage(formData.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <div className={s.wrapperAddMessage}>\r\n\r\n                    <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messageText: state.dialogsPage.messageText,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","user","s","className","message","path","id","to","isActive","name","maxLength","maxLengthCreator","AddMessageReduxForm","ReduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","p","dialogsElements","dialogs","map","d","messagesElements","messages","m","formData","addMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","messageText","dialogsPage","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}